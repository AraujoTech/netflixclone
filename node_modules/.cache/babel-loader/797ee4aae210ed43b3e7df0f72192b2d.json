{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\DEV\\\\REACT\\\\netflixclone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TMDB_Request from './TMDB_Request';\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //pegando a lista total\n      var list = await TMDB_Request.getHomeList();\n      setMovieList(list);\n    };\n\n    loadAll();\n  }, []); //Pegando o Featured\n\n  let originals = list.filter(i => i.slug === 'originals');\n  let randomChosen = Math.floor(Math.random() * originals[0].items.results.lenght - 1);\n  let chosen = originals[0].items.results[randomChosen];\n  console.log(chosen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 4\n  }, this);\n}, \"J4dhiN1jv5FHKMihtJ4suF5iGYQ=\");","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/REACT/netflixclone/src/App.js"],"names":["React","useEffect","useState","TMDB_Request","MovieRow","FeaturedMovie","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","lenght","chosen","console","log","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;;AAGA,kBAAc,MAAM;AAAA;;AAElB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACM,YAAD,EAAcC,eAAd,IAA+BP,QAAQ,CAAC,IAAD,CAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,OAAO,GAAG,YAAU;AAE9B;AAEI,UAAIC,IAAI,GAAG,MAAMR,YAAY,CAACS,WAAb,EAAjB;AACEL,MAAAA,YAAY,CAACI,IAAD,CAAZ;AACD,KAND;;AAOAD,IAAAA,OAAO;AACR,GATQ,EASP,EATO,CAAT,CALkB,CAgBlB;;AACA,MAAIG,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAU,WAAzB,CAAhB;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA1C,GAAmD,CAA9D,CAAnB;AACA,MAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGhB,YAAY,iBACV,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAFL,eAME;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACqB,GAAV,CAAc,CAACC,IAAD,EAAMC,GAAN,kBACb;AAAA,+BACE,QAAC,QAAD;AAAoB,UAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,UAAA,KAAK,EAAEF,IAAI,CAACP;AAAnD,WAAeQ,GAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmBD,CAzCD","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport TMDB_Request from './TMDB_Request'\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport './App.css'\n\n\nexport default() => {\n\n  const [movieList,setMovieList] = useState([]);\n  const [featuredData,setFeaturedData]=useState(null);\n  \n  useEffect(()=>{\n    const loadAll = async() =>{\n\n//pegando a lista total\n      \n    var list = await TMDB_Request.getHomeList();\n      setMovieList(list);\n    }\n    loadAll();\n  },[] );\n\n  //Pegando o Featured\n  let originals = list.filter(i=>i.slug=== 'originals');\n  let randomChosen = Math.floor(Math.random()* originals[0].items.results.lenght - 1);\n  let chosen = originals[0].items.results[randomChosen];\n  console.log(chosen);\n\n  return(\n   <div className='page'>\n     {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n     }\n\n     \n     <section className='lists'>\n       {movieList.map((item,key)=>(\n         <div>\n           <MovieRow key={key} title={item.title} items={item.items} />\n           \n         </div>\n\n\n       ))}\n     </section>\n   </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}