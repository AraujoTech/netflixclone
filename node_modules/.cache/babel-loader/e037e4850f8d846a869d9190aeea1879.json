{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/user/Documents/DEV/REACT/netflixclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/user/Documents/DEV/REACT/netflixclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/user/Documents/DEV/REACT/netflixclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import TMDB_Request from'./TMDB_Request';import MovieRow from'./Components/MovieRow';import FeaturedMovie from'./Components/FeaturedMovie';import Header from'./Components/Header';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setMovieList=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),featuredData=_useState4[0],setFeaturedData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),blackHeader=_useState6[0],setBlackHeader=_useState6[1];useEffect(function(){var loadAll=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var list,originals,randomChosen,chosen,chosenInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return TMDB_Request.getHomeList();case 2:list=_context.sent;setMovieList(list);//Pegando o Featured\noriginals=list.filter(function(i){return i.slug==='originals';});randomChosen=Math.floor(Math.random()*(originals[0].items.results.length-1));chosen=originals[0].items.results[randomChosen];_context.next=9;return TMDB_Request.getMovieInfo(chosen.id,'tv');case 9:chosenInfo=_context.sent;setFeaturedData(chosenInfo);case 11:case\"end\":return _context.stop();}}},_callee);}));return function loadAll(){return _ref.apply(this,arguments);};}();loadAll();},[]);useEffect(function(){var scrollListener=function scrollListener(){if(window.scrollY>100){setBlackHeader(true);}else{setBlackHeader(false);}};window.addEventListener('scroll',scrollListener);return function(){window.removeEventListener('scroll',scrollListener);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{black:blackHeader}),featuredData&&/*#__PURE__*/_jsx(FeaturedMovie,{item:featuredData}),/*#__PURE__*/_jsx(\"section\",{className:\"lists\",children:movieList.map(function(item,key){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MovieRow,{title:item.title,items:item.items},key)});})}),/*#__PURE__*/_jsx(\"footer\",{children:\"Feito por Rafael de Mendon\\xE7a Ara\\xFAjo\"}),movieList.length<=0&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\",alt:\"Carregando\"})})]});});","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/REACT/netflixclone/src/App.js"],"names":["React","useEffect","useState","TMDB_Request","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","getHomeList","list","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","getMovieInfo","id","chosenInfo","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAwBC,QAAxB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,WAAP,C,wFAGA,eAAc,UAAM,CAElB,cAAiCJ,QAAQ,CAAC,EAAD,CAAzC,wCAAOK,SAAP,eAAiBC,YAAjB,eACA,eAAqCN,QAAQ,CAAC,IAAD,CAA7C,yCAAOO,YAAP,eAAoBC,eAApB,eACA,eAAqCR,QAAQ,CAAC,KAAD,CAA7C,yCAAOS,WAAP,eAAmBC,cAAnB,eAEAX,SAAS,CAAC,UAAI,CACZ,GAAMY,CAAAA,OAAO,0FAAG,2MAICV,CAAAA,YAAY,CAACW,WAAb,EAJD,QAIZC,IAJY,eAKdP,YAAY,CAACO,IAAD,CAAZ,CAEC;AACDC,SARc,CAQFD,IAAI,CAACE,MAAL,CAAY,SAAAC,CAAC,QAAEA,CAAAA,CAAC,CAACC,IAAF,GAAW,WAAb,EAAb,CARE,CASdC,YATc,CASCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAgBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,CAAoC,CAApD,CAAX,CATD,CAUdC,MAVc,CAULX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAVK,uBAWKjB,CAAAA,YAAY,CAACyB,YAAb,CAA0BD,MAAM,CAACE,EAAjC,CAAoC,IAApC,CAXL,QAWdC,UAXc,eAYlBpB,eAAe,CAACoB,UAAD,CAAf,CAZkB,uDAAH,kBAAPjB,CAAAA,OAAO,0CAAb,CAeAA,OAAO,GACR,CAjBQ,CAiBP,EAjBO,CAAT,CAmBDZ,SAAS,CAAC,UAAI,CACb,GAAM8B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAI,CACzB,GAAGC,MAAM,CAACC,OAAP,CAAe,GAAlB,CAAsB,CACpBrB,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,IAEM,CACJA,cAAc,CAAC,KAAD,CAAd,CACD,CACF,CAND,CAQAoB,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAiCH,cAAjC,EAEA,MAAO,WAAI,CACTC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAoCJ,cAApC,EACD,CAFD,CAKA,CAhBQ,CAgBP,EAhBO,CAAT,CAkBC,mBACC,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAIpB,WAAjB,EADF,CAGGF,YAAY,eACV,KAAC,aAAD,EAAe,IAAI,CAAEA,YAArB,EAJL,cAQE,gBAAS,SAAS,CAAC,OAAnB,UACGF,SAAS,CAAC6B,GAAV,CAAc,SAACC,IAAD,CAAMC,GAAN,qBACb,kCACE,KAAC,QAAD,EAAoB,KAAK,CAAED,IAAI,CAACE,KAAhC,CAAuC,KAAK,CAAEF,IAAI,CAACb,KAAnD,EAAec,GAAf,CADF,EADa,EAAd,CADH,EARF,cAmBE,qEAnBF,CAuBG/B,SAAS,CAACmB,MAAV,EAAmB,CAAnB,eACE,YAAK,SAAS,CAAC,SAAf,uBACE,YAAK,GAAG,CAAG,sGAAX,CAAkH,GAAG,CAAC,YAAtH,EADF,EAxBL,GADD,CAgCD,CA3ED","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport TMDB_Request from './TMDB_Request';\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport Header from './Components/Header';\nimport './App.css'\n\n\nexport default() => {\n\n  const [movieList,setMovieList] = useState([]);\n  const [featuredData,setFeaturedData]=useState(null);\n  const [blackHeader,setBlackHeader] = useState(false);\n  \n  useEffect(()=>{\n    const loadAll = async() =>{\n\n//pegando a lista total\n      \n    let list = await TMDB_Request.getHomeList();\n      setMovieList(list);\n\n       //Pegando o Featured\n  let originals = list.filter(i=>i.slug === 'originals');\n  let randomChosen = Math.floor(Math.random()* (originals[0].items.results.length - 1));\n  let chosen = originals[0].items.results[randomChosen];\n  let chosenInfo = await TMDB_Request.getMovieInfo(chosen.id,'tv');\n  setFeaturedData(chosenInfo);\n\n    }\n    loadAll();\n  },[] );\n\n useEffect(()=>{\n  const scrollListener = ()=>{\n    if(window.scrollY>100){\n      setBlackHeader(true);\n    } else{\n      setBlackHeader(false);\n    }\n  }\n\n  window.addEventListener('scroll',scrollListener);\n\n  return ()=>{\n    window.removeEventListener('scroll',scrollListener);\n  }\n\n\n },[]);\n\n  return(\n   <div className='page'>\n     <Header black = {blackHeader}/>\n\n     {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n     }\n\n     \n     <section className='lists'>\n       {movieList.map((item,key)=>(\n         <div>\n           <MovieRow key={key} title={item.title} items={item.items} />\n           \n         </div>\n\n\n       ))}\n     </section>\n\n     <footer>\n       Feito por Rafael de Mendonça Araújo\n     </footer>\n\n     {movieList.length <=0 &&\n        <div className='loading'>\n          <img src = 'https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif' alt='Carregando'></img>\n\n        </div>\n     }\n   </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}