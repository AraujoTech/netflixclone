{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\DEV\\\\REACT\\\\netflixclone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TMDB_Request from './TMDB_Request';\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport Header from './Components/Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(() => {\n    const loadAll = async () => {\n      //pegando a lista total\n      let list = await TMDB_Request.getHomeList();\n      setMovieList(list); //Pegando o Featured\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await TMDB_Request.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 100) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      black: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Feito por Rafael de Mendon\\xE7a Ara\\xFAjo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), movieList.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\",\n        alt: \"Carregando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 4\n  }, this);\n}, \"wxu0SjJ6IaJpg3wiCKIwohAJkJk=\");","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/REACT/netflixclone/src/App.js"],"names":["React","useEffect","useState","TMDB_Request","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport TMDB_Request from './TMDB_Request';\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport Header from './Components/Header';\nimport './App.css'\n\n\nexport default() => {\n\n  const [movieList,setMovieList] = useState([]);\n  const [featuredData,setFeaturedData]=useState(null);\n  const [blackHeader,setBlackHeader] = useState(false);\n  \n  useEffect(()=>{\n    const loadAll = async() =>{\n\n//pegando a lista total\n      \n    let list = await TMDB_Request.getHomeList();\n      setMovieList(list);\n\n       //Pegando o Featured\n  let originals = list.filter(i=>i.slug === 'originals');\n  let randomChosen = Math.floor(Math.random()* (originals[0].items.results.length - 1));\n  let chosen = originals[0].items.results[randomChosen];\n  let chosenInfo = await TMDB_Request.getMovieInfo(chosen.id,'tv');\n  setFeaturedData(chosenInfo);\n\n    }\n    loadAll();\n  },[] );\n\n useEffect(()=>{\n  const scrollListener = ()=>{\n    if(window.scrollY>100){\n      setBlackHeader(true);\n    } else{\n      setBlackHeader(false);\n    }\n  }\n\n  window.addEventListener('scroll',scrollListener);\n\n  return ()=>{\n    window.removeEventListener('scroll',scrollListener);\n  }\n\n\n },[]);\n\n  return(\n   <div className='page'>\n     <Header black = {blackHeader}/>\n\n     {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n     }\n\n     \n     <section className='lists'>\n       {movieList.map((item,key)=>(\n         <div>\n           <MovieRow key={key} title={item.title} items={item.items} />\n           \n         </div>\n\n\n       ))}\n     </section>\n\n     <footer>\n       Feito por Rafael de Mendonça Araújo\n     </footer>\n\n     {movieList.length <=0 &&\n        <div className='loading'>\n          <img src = 'https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif' alt='Carregando'></img>\n\n        </div>\n     }\n   </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}